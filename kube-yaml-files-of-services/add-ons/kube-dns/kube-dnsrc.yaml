apiVersion: v1
items:
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: 2016-03-29T12:31:52Z
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      version: v8
    name: kube-dns-v8
    namespace: kube-system
    resourceVersion: "353027"
    selfLink: /api/v1/namespaces/kube-system/replicationcontrollers/kube-dns-v8
    uid: 371e5eba-f5aa-11e5-bf5e-fa163ec4c512
  spec:
    replicas: 1
    selector:
      k8s-app: kube-dns
      version: v8
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.io/cluster-service: "true"
          version: v8
      spec:
        containers:
        - command:
          - /usr/local/bin/etcd
          - -data-dir
          - /var/etcd/data
          - -listen-client-urls
          - http://127.0.0.1:2379,http://127.0.0.1:4001
          - -advertise-client-urls
          - http://127.0.0.1:2379,http://127.0.0.1:4001
          - -initial-cluster-token
          - skydns-etcd
          image: gcr.io/google_containers/etcd:2.0.9
          imagePullPolicy: IfNotPresent
          name: etcd
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/etcd/data
            name: etcd-storage
        - args:
          - -domain=cluster.local
          - -kube_master_url=http://172.17.13.194:8080
          image: gcr.io/google_containers/kube2sky:1.11
          imagePullPolicy: IfNotPresent
          name: kube2sky
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
        - args:
          - -machines=http://localhost:4001
          - -addr=0.0.0.0:53 
          - -domain=cluster.local
          image: gcr.io/google_containers/skydns:2015-03-11-001
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          name: skydns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
        - args:
          - -cmd=nslookup kubernetes.default.svc.cluster.local localhost >/dev/null
          - -port=8080
          image: gcr.io/google_containers/exechealthz:1.0
          imagePullPolicy: IfNotPresent
          name: healthz
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
        dnsPolicy: Default
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: etcd-storage
  status:
    observedGeneration: 1
    replicas: 1
kind: List
metadata: {}
